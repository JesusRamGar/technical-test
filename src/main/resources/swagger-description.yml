openapi: 3.0.3
info:
  title: Offer API
  description: API for managing offers
  version: 1.0.0
tags:
  - name: offer
    description: Operations for managing offers

paths:
  /offer:
    post:
      operationId: createOffer
      summary: Create a new offer
      description: This operation creates a new offer
      tags:
        - offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferDTO'
      responses:
        '201':
          description: Offer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDTO'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

    get:
      operationId: getAllOffers
      summary: Retrieve all offers
      description: This operation retrieves all offers
      tags:
        - offer
      responses:
        '200':
          description: List of offers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferDTO'

    delete:
      operationId: deleteAllOffers
      summary: Delete all offers
      description: This operation delete all offers
      tags:
        - offer
      responses:
        '204':
          description: Offers deleted successfully

  /offer/{id}:
    get:
      operationId: getOfferById
      summary: Retrieve an offer by ID
      description: This operation retrieves an offer by id
      tags:
        - offer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Offer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDTO'
        '404':
          description: Offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

    delete:
      operationId: deleteOfferById
      summary: Delete an offer by ID
      description: This operation delete an offer by id
      tags:
        - offer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Offer deleted successfully
        '404':
          description: Offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

components:
  schemas:
    OfferDTO:
      type: object
      description: An Offer represents a promotional price or discount available for a specific product within a defined time period
      required:
        - brandId
        - startDate
        - endDate
        - priceListId
        - productPartNumber
        - priority
        - price
        - currencyIso
      properties:
        offerId:
          type: integer
          format: int64
          description: Unique identifier for the offer
          example: 1
        brandId:
          type: integer
          format: int64
          description: Identifier for the brand associated with the offer
          example: 1
        startDate:
          type: string
          description: Start date of the offer
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}\\.[0-9]{2}\\.[0-9]{2}Z$"
          example: '2020-06-14T00.00.00Z'
        endDate:
          type: string
          description: End date of the offer
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}\\.[0-9]{2}\\.[0-9]{2}Z$"
          example: '2020-12-31T23.59.59Z'
        priceListId:
          type: integer
          format: int64
          description: Identifier for the price list related to the offer
          example: 1
        productPartNumber:
          type: string
          description: Unique identifier for the product associated with the offer
          minLength: 9
          maxLength: 9
          pattern: "^[0-9]{9}$"
          example: '000100233'
        priority:
          type: integer
          description: Priority level of the offer
          example: 0
        price:
          type: number
          format: double
          description: Price value of the offer
          example: 35.50
        currencyIso:
          type: string
          description: ISO currency code for the price of the offer
          minLength: 3
          maxLength: 3
          pattern: "^[A-Z]{3}$"
          example: 'EUR'
    ErrorResponseDTO:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: HTTP status message
        detail:
          type: string
          description: Detail error message
